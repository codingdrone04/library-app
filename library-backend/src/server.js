const app = require('./app');
const connectMongoDB = require('./config/mongodb');
const connectPostgreSQL = require('./config/postgresql'); // ‚Üê CHANGEMENT ICI

const PORT = process.env.PORT || 3000;

// Fonction pour d√©marrer le serveur
async function startServer() {
  try {
    console.log('üöÄ D√©marrage du serveur Library API...');
    
    // Connexion MongoDB (pour les livres)
    console.log('üìö Connexion √† MongoDB...');
    await connectMongoDB();
    console.log('‚úÖ MongoDB connect√© !');
    
    // Connexion PostgreSQL (pour les utilisateurs et emprunts)
    console.log('üêò Connexion √† PostgreSQL...');
    await connectPostgreSQL(); // ‚Üê CHANGEMENT ICI
    console.log('‚úÖ PostgreSQL connect√© !');
    
    // D√©marrage du serveur
    const server = app.listen(PORT, '0.0.0.0', () => {
      console.log(`
    üéâ ========================================
    üìö Library API Server is running!
    üåê Port: ${PORT}
    üîó Local: http://localhost:${PORT}
    üìä Health: http://localhost:${PORT}/health
    üîß Environment: ${process.env.NODE_ENV || 'development'}
    üêò PostgreSQL: Connected
    üìö MongoDB: Connected
    ========================================
      `);
    });

    // Gestion gracieuse de l'arr√™t
    process.on('SIGTERM', () => {
      console.log('üõë SIGTERM received. Shutting down gracefully...');
      server.close(() => {
        console.log('üí§ Server closed.');
        process.exit(0);
      });
    });

    process.on('SIGINT', () => {
      console.log('üõë SIGINT received. Shutting down gracefully...');
      server.close(() => {
        console.log('üí§ Server closed.');
        process.exit(0);
      });
    });

  } catch (error) {
    console.error('‚ùå Erreur lors du d√©marrage du serveur:', error);
    process.exit(1);
  }
}

// Gestion des erreurs non captur√©es
process.on('unhandledRejection', (err) => {
  console.error('‚ùå Unhandled Promise Rejection:', err);
  process.exit(1);
});

process.on('uncaughtException', (err) => {
  console.error('‚ùå Uncaught Exception:', err);
  process.exit(1);
});

// D√©marrer le serveur
startServer();